<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hotel.dao.HotelOrderDao">

    <resultMap type="com.hotel.entity.HotelOrder" id="HotelOrderMap">
        <result property="orderid" column="orderId" jdbcType="INTEGER"/>
        <result property="memid" column="memId" jdbcType="INTEGER"/>
        <result property="roomid" column="roomId" jdbcType="INTEGER"/>
        <result property="orderstate" column="orderstate" jdbcType="VARCHAR"/>
        <result property="deposit" column="Deposit" jdbcType="INTEGER"/>
        <result property="price" column="price" jdbcType="NUMERIC"/>
        <result property="ordertime" column="ordertime" jdbcType="TIMESTAMP"/>
        <result property="personnum" column="personNum" jdbcType="INTEGER"/>
        <result property="intime" column="inTime" jdbcType="TIMESTAMP"/>
        <result property="outtime" column="outTime" jdbcType="TIMESTAMP"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="HotelOrderMap">
        select orderId,
               memId,
               roomId,
               orderstate,
               Deposit,
               price,
               ordertime,
               personNum,
               inTime,
               outTime,
               remark
        from hotelmanager.hotel_order
        where orderId = #{orderid}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="HotelOrderMap">
        select orderId,
               memId,
               roomId,
               orderstate,
               Deposit,
               price,
               ordertime,
               personNum,
               inTime,
               outTime,
               remark
        from hotelmanager.hotel_order
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="HotelOrderMap">
        select
        orderId, memId, roomId, orderstate, Deposit, price, ordertime, personNum, inTime, outTime, remark
        from hotelmanager.hotel_order
        <where>
            <if test="orderid != null">
                and orderId = #{orderid}
            </if>
            <if test="memid != null">
                and memId = #{memid}
            </if>
            <if test="roomid != null">
                and roomId = #{roomid}
            </if>
            <if test="orderstate != null and orderstate != ''">
                and orderstate = #{orderstate}
            </if>
            <if test="deposit != null">
                and Deposit = #{deposit}
            </if>
            <if test="price != null">
                and price = #{price}
            </if>
            <if test="ordertime != null">
                and ordertime = #{ordertime}
            </if>
            <if test="personnum != null">
                and personNum = #{personnum}
            </if>
            <if test="intime != null">
                and inTime = #{intime}
            </if>
            <if test="outtime != null">
                and outTime = #{outtime}
            </if>
            <if test="remark != null and remark != ''">
                and remark = #{remark}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="orderid" useGeneratedKeys="true">
        insert into hotelmanager.hotel_order(memId, roomId, orderstate, Deposit, price, ordertime, personNum, inTime,
                                             outTime, remark)
        values (#{memid}, #{roomid}, #{orderstate}, #{deposit}, #{price}, #{ordertime}, #{personnum}, #{intime},
                #{outtime}, #{remark})
    </insert>

    <insert id="insertBatch" keyProperty="orderid" useGeneratedKeys="true">
        insert into hotelmanager.hotel_order(memId, roomId, orderstate, Deposit, price, ordertime, personNum, inTime,
        outTime, remark)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.memid}, #{entity.roomid}, #{entity.orderstate}, #{entity.deposit}, #{entity.price},
            #{entity.ordertime}, #{entity.personnum}, #{entity.intime}, #{entity.outtime}, #{entity.remark})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="orderid" useGeneratedKeys="true">
        insert into hotelmanager.hotel_order(memId, roomId, orderstate, Deposit, price, ordertime, personNum, inTime,
        outTime, remark)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.memid}, #{entity.roomid}, #{entity.orderstate}, #{entity.deposit}, #{entity.price},
            #{entity.ordertime}, #{entity.personnum}, #{entity.intime}, #{entity.outtime}, #{entity.remark})
        </foreach>
        on duplicate key update
        memId = values(memId) , roomId = values(roomId) , orderstate = values(orderstate) , Deposit = values(Deposit) ,
        price = values(price) , ordertime = values(ordertime) , personNum = values(personNum) , inTime = values(inTime)
        , outTime = values(outTime) , remark = values(remark)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update hotelmanager.hotel_order
        <set>
            <if test="memid != null">
                memId = #{memid},
            </if>
            <if test="roomid != null">
                roomId = #{roomid},
            </if>
            <if test="orderstate != null and orderstate != ''">
                orderstate = #{orderstate},
            </if>
            <if test="deposit != null">
                Deposit = #{deposit},
            </if>
            <if test="price != null">
                price = #{price},
            </if>
            <if test="ordertime != null">
                ordertime = #{ordertime},
            </if>
            <if test="personnum != null">
                personNum = #{personnum},
            </if>
            <if test="intime != null">
                inTime = #{intime},
            </if>
            <if test="outtime != null">
                outTime = #{outtime},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark},
            </if>
        </set>
        where orderId = #{orderid}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from hotelmanager.hotel_order
        where orderId = #{orderid}
    </delete>

</mapper>

