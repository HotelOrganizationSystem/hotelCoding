<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hotel.dao.RoleDao">

    <resultMap type="com.hotel.entity.Role" id="RoleMap">
        <result property="roleid" column="roleId" jdbcType="INTEGER"/>
        <result property="rolename" column="roleName" jdbcType="VARCHAR"/>
        <result property="funlist" column="funList" jdbcType="VARCHAR"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="RoleMap">
        select roleId,
               roleName,
               funList,
               remark
        from hotelmanager.role
        where roleId = #{roleid}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="RoleMap">
        select roleId,
               roleName,
               funList,
               remark
        from hotelmanager.role
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="RoleMap">
        select
        roleId, roleName, funList, remark
        from hotelmanager.role
        <where>
            <if test="roleid != null">
                and roleId = #{roleid}
            </if>
            <if test="rolename != null and rolename != ''">
                and roleName = #{rolename}
            </if>
            <if test="funlist != null and funlist != ''">
                and funList = #{funlist}
            </if>
            <if test="remark != null and remark != ''">
                and remark = #{remark}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="roleid" useGeneratedKeys="true">
        insert into hotelmanager.role(roleName, funList, remark)
        values (#{rolename}, #{funlist}, #{remark})
    </insert>

    <insert id="insertBatch" keyProperty="roleid" useGeneratedKeys="true">
        insert into hotelmanager.role(roleName, funList, remark)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.rolename}, #{entity.funlist}, #{entity.remark})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="roleid" useGeneratedKeys="true">
        insert into hotelmanager.role(roleName, funList, remark)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.rolename}, #{entity.funlist}, #{entity.remark})
        </foreach>
        on duplicate key update
        roleName = values(roleName) , funList = values(funList) , remark = values(remark)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update hotelmanager.role
        <set>
            <if test="rolename != null and rolename != ''">
                roleName = #{rolename},
            </if>
            <if test="funlist != null and funlist != ''">
                funList = #{funlist},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark},
            </if>
        </set>
        where roleId = #{roleid}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from hotelmanager.role
        where roleId = #{roleid}
    </delete>

</mapper>

