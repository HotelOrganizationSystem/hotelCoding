<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hotel.dao.RoomDao">

    <resultMap type="com.hotel.entity.Room" id="RoomMap">
        <result property="roomid" column="roomId" jdbcType="INTEGER"/>
        <result property="roomNum" column="room_num" jdbcType="VARCHAR"/>
        <result property="rtypeid" column="rtypeId" jdbcType="INTEGER"/>
        <result property="isres" column="isRes" jdbcType="INTEGER"/>
        <result property="state" column="state" jdbcType="VARCHAR"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="RoomMap">
        select roomId,
               room_num,
               rtypeId,
               isRes,
               state,
               remark
        from hotelmanager.room
        where roomId = #{roomid}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="RoomMap">
        select roomId,
               room_num,
               rtypeId,
               isRes,
               state,
               remark
        from hotelmanager.room
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="RoomMap">
        select
        roomId, room_num, rtypeId, isRes, state, remark
        from hotelmanager.room
        <where>
            <if test="roomid != null">
                and roomId = #{roomid}
            </if>
            <if test="roomNum != null and roomNum != ''">
                and room_num = #{roomNum}
            </if>
            <if test="rtypeid != null">
                and rtypeId = #{rtypeid}
            </if>
            <if test="isres != null">
                and isRes = #{isres}
            </if>
            <if test="state != null and state != ''">
                and state = #{state}
            </if>
            <if test="remark != null and remark != ''">
                and remark = #{remark}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="roomid" useGeneratedKeys="true">
        insert into hotelmanager.room(room_num, rtypeId, isRes, state, remark)
        values (#{roomNum}, #{rtypeid}, #{isres}, #{state}, #{remark})
    </insert>

    <insert id="insertBatch" keyProperty="roomid" useGeneratedKeys="true">
        insert into hotelmanager.room(room_num, rtypeId, isRes, state, remark)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.roomNum}, #{entity.rtypeid}, #{entity.isres}, #{entity.state}, #{entity.remark})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="roomid" useGeneratedKeys="true">
        insert into hotelmanager.room(room_num, rtypeId, isRes, state, remark)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.roomNum}, #{entity.rtypeid}, #{entity.isres}, #{entity.state}, #{entity.remark})
        </foreach>
        on duplicate key update
        room_num = values(room_num) , rtypeId = values(rtypeId) , isRes = values(isRes) , state = values(state) , remark
        = values(remark)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update hotelmanager.room
        <set>
            <if test="roomNum != null and roomNum != ''">
                room_num = #{roomNum},
            </if>
            <if test="rtypeid != null">
                rtypeId = #{rtypeid},
            </if>
            <if test="isres != null">
                isRes = #{isres},
            </if>
            <if test="state != null and state != ''">
                state = #{state},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark},
            </if>
        </set>
        where roomId = #{roomid}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from hotelmanager.room
        where roomId = #{roomid}
    </delete>

</mapper>

